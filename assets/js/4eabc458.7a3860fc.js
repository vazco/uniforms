"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[81],{14489:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>u,files:()=>l,frontMatter:()=>r,metadata:()=>d,toc:()=>m});var a=s(86106),t=s(82036),i=s(50901);const r={title:"Basic usage",sidebar_position:2},o=void 0,d={id:"getting-started/basic-usage",title:"Basic usage",description:"This example uses uniforms-bridge-zod and uniforms-antd packages as this bridge and theme don't require any extra configuration.",source:"@site/docs/getting-started/basic-usage.mdx",sourceDirName:"getting-started",slug:"/getting-started/basic-usage",permalink:"/docs/getting-started/basic-usage",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{title:"Basic usage",sidebar_position:2},sidebar:"docs",previous:{title:"Installation",permalink:"/docs/getting-started/installation"},next:{title:"Migrating v2 to v3",permalink:"/docs/getting-started/migrating-2-to-3"}},c={},l={"/App.tsx":"import { AutoForm } from 'uniforms-antd';\nimport { ZodBridge } from 'uniforms-bridge-zod';\nimport { z } from 'zod';\n\nconst userSchema = z.object({\n  username: z.string(),\n});\n\nconst schema = new ZodBridge({ schema: userSchema });\n\nexport default function App() {\n  return (\n    <AutoForm\n      schema={schema}\n      onSubmit={model => window.alert(JSON.stringify(model))}\n    />\n  );\n}"},m=[{value:"1. Installation",id:"1-installation",level:3},{value:"2. Create a schema",id:"2-create-a-schema",level:3},{value:"3. Create a form",id:"3-create-a-form",level:3},{value:"Summary",id:"summary",level:3}];function h(e){const n={admonition:"admonition",code:"code",h3:"h3",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.admonition,{type:"info",children:(0,a.jsxs)(n.p,{children:["This example uses ",(0,a.jsx)(n.code,{children:"uniforms-bridge-zod"})," and ",(0,a.jsx)(n.code,{children:"uniforms-antd"})," packages as this bridge and theme don't require any extra configuration."]})}),"\n",(0,a.jsx)(n.h3,{id:"1-installation",children:"1. Installation"}),"\n",(0,a.jsx)(n.p,{children:"First, install uniforms packages."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sh",children:"npm install uniforms uniforms-bridge-zod uniforms-antd\n"})}),"\n",(0,a.jsxs)(n.p,{children:["After that, we need also to install ",(0,a.jsx)(n.code,{children:"zod"})," and ",(0,a.jsx)(n.code,{children:"antd"})," packages."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sh",children:"npm install zod antd\n"})}),"\n",(0,a.jsx)(n.h3,{id:"2-create-a-schema",children:"2. Create a schema"}),"\n",(0,a.jsxs)(n.p,{children:["Let's create a schema for our form. We will use ",(0,a.jsx)(n.code,{children:"zod"})," package for this."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ts",children:"import { z } from 'zod';\n\nconst userSchema = z.object({\n  username: z.string(),\n  password: z.string().min(8),\n});\n\nconst schema = new ZodBridge({ schema: userSchema });\n"})}),"\n",(0,a.jsx)(n.h3,{id:"3-create-a-form",children:"3. Create a form"}),"\n",(0,a.jsxs)(n.p,{children:["Now we can create a form. We will use ",(0,a.jsx)(n.code,{children:"uniforms-antd"})," package for this."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-tsx",children:"import { AutoForm } from 'uniforms-antd';\n\nfunction App() {\n  return <AutoForm schema={schema} onSubmit={console.log} />;\n}\n"})}),"\n",(0,a.jsx)(n.p,{children:"That's it! Now we can render our form and see it in action."}),"\n",(0,a.jsx)(n.h3,{id:"summary",children:"Summary"}),"\n",(0,a.jsx)(n.p,{children:"We have created a simple form with a schema. It uses AntD theme and Zod as our schema validator."}),"\n","\n",(0,a.jsx)(i.B,{bridge:"zod",files:l})]})}function u(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(h,{...e})}):h(e)}},50901:(e,n,s)=>{s.d(n,{B:()=>r});var a=s(86085),t=s(50050),i=s(86106);function r(e){const{files:n,bridge:s}=e;return(0,i.jsx)(a.l5,{template:"react-ts",customSetup:{dependencies:t.E[s]},files:n,options:{recompileMode:"delayed",recompileDelay:800},children:(0,i.jsxs)(a.am,{style:{height:"600px"},children:[(0,i.jsx)(a.cW,{showTabs:!0,showInlineErrors:!0,style:{height:"100%"}}),(0,i.jsx)(a.G5,{style:{height:"100%"}})]})})}},50050:(e,n,s)=>{s.d(n,{E:()=>i,N:()=>a});let a=function(e){return e.Zod="zod",e.JSONSchema="json-schema",e.SimpleSchema="simpl-schema",e}({});const t={antd:"^5",uniforms:"4.0.0-beta.2","uniforms-antd":"4.0.0-beta.2"},i={[a.Zod]:{...t,"uniforms-bridge-zod":"4.0.0-beta.2",zod:"^3"},[a.JSONSchema]:{...t,ajv:"^8","uniforms-bridge-json-schema":"4.0.0-beta.2"},[a.SimpleSchema]:{...t,"simpl-schema":"^3","uniforms-bridge-simple-schema-2":"4.0.0-beta.2"}}}}]);