"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[276],{78543:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>t,default:()=>h,frontMatter:()=>s,metadata:()=>d,toc:()=>a});var i=r(86106),o=r(82036);const s={id:"bridges",title:"Bridges",sidebar_position:3},t=void 0,d={id:"api-reference/bridges",title:"Bridges",description:"To make use of any schema, uniforms have to create a bridge of it - a unified schema mapper.",source:"@site/docs/api-reference/bridges.mdx",sourceDirName:"api-reference",slug:"/api-reference/bridges",permalink:"/docs/api-reference/bridges",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{id:"bridges",title:"Bridges",sidebar_position:3},sidebar:"docs",previous:{title:"Fields",permalink:"/docs/api-reference/fields"},next:{title:"Context data",permalink:"/docs/api-reference/context-data"}},c={},a=[{value:"<code>JSONSchemaBridge</code>",id:"jsonschemabridge",level:2},{value:"Note on <code>allOf</code>/<code>anyOf</code>/<code>oneOf</code>",id:"note-on-allofanyofoneof",level:3},{value:"Note on Bluebird",id:"note-on-bluebird",level:3},{value:"<code>SimpleSchema2Bridge</code>",id:"simpleschema2bridge",level:2},{value:"<code>ZodBridge</code>",id:"zodbridge",level:2}];function l(e){const n={a:"a",blockquote:"blockquote",code:"code",em:"em",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.p,{children:["To make use of any schema, uniforms have to create a ",(0,i.jsx)(n.em,{children:"bridge"})," of it - a unified schema mapper."]}),"\n",(0,i.jsx)("p",{align:"center",children:(0,i.jsx)("img",{src:"/img/bridge-concept.svg",alt:""})}),"\n",(0,i.jsx)(n.p,{children:"Currently available bridges:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"JSONSchemaBridge"})," in ",(0,i.jsx)(n.code,{children:"uniforms-bridge-json-schema"})," (",(0,i.jsx)(n.a,{href:"https://json-schema.org/",children:"schema documentation"}),")"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"SimpleSchema2Bridge"})," in ",(0,i.jsx)(n.code,{children:"uniforms-bridge-simple-schema-2"})," (",(0,i.jsx)(n.a,{href:"https://github.com/longshotlabs/simpl-schema#readme",children:"schema documentation"}),")"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"ZodBridge"})," in ",(0,i.jsx)(n.code,{children:"uniforms-bridge-zod"})," (",(0,i.jsx)(n.a,{href:"https://zod.dev/",children:"schema documentation"}),")"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Deprecated bridges:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"SimpleSchemaBridge"})," in ",(0,i.jsx)(n.code,{children:"uniforms-bridge-simple-schema"})," (",(0,i.jsx)(n.a,{href:"https://github.com/Meteor-Community-Packages/meteor-simple-schema/blob/master/DOCS.md",children:"schema documentation"}),")"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"GraphQLBridge"})," in ",(0,i.jsx)(n.code,{children:"uniforms-bridge-graphql"})," (",(0,i.jsx)(n.a,{href:"https://graphql.org/",children:"schema documentation"}),")"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["If you see a lot of ",(0,i.jsx)(n.a,{href:"https://fb.me/react-unknown-prop",children:(0,i.jsx)(n.code,{children:"Warning: Unknown props..."})})," logs, check if your schema or theme doesn't provide extra props. If so, consider ",(0,i.jsxs)(n.a,{href:"/docs/api-reference/helpers#filterdomprops",children:["registering it with ",(0,i.jsx)(n.code,{children:"filterDOMProps"})]}),"."]}),"\n",(0,i.jsx)(n.h2,{id:"jsonschemabridge",children:(0,i.jsx)(n.code,{children:"JSONSchemaBridge"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",children:"import Ajv from 'ajv';\nimport { JSONSchemaBridge } from 'uniforms-bridge-json-schema';\n\nconst ajv = new Ajv({ allErrors: true, useDefaults: true });\n\nconst schema = {\n  title: 'Person',\n  type: 'object',\n  properties: {\n    firstName: { type: 'string' },\n    lastName: { type: 'string' },\n    age: {\n      description: 'Age in years',\n      type: 'integer',\n      minimum: 0,\n    },\n  },\n  required: ['firstName', 'lastName'],\n};\n\nfunction createValidator(schema: object) {\n  const validator = ajv.compile(schema);\n\n  return (model: object) => {\n    validator(model);\n    return validator.errors?.length ? { details: validator.errors } : null;\n  };\n}\n\nconst validator = createValidator(schema);\n\nconst bridge = new JSONSchemaBridge({ schema, validator });\n"})}),"\n",(0,i.jsxs)(n.h3,{id:"note-on-allofanyofoneof",children:["Note on ",(0,i.jsx)(n.code,{children:"allOf"}),"/",(0,i.jsx)(n.code,{children:"anyOf"}),"/",(0,i.jsx)(n.code,{children:"oneOf"})]}),"\n",(0,i.jsxs)(n.p,{children:["The current handling of ",(0,i.jsx)(n.code,{children:"allOf"}),"/",(0,i.jsx)(n.code,{children:"anyOf"}),"/",(0,i.jsx)(n.code,{children:"oneOf"})," is not complete and does not work with all possible cases. For an in-detail discussion, see ",(0,i.jsx)(n.a,{href:"https://github.com/vazco/uniforms/issues/863",children:"#863"}),". How it works, is that only a few properties are being used:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"properties"}),", where all subfields are merged (last definition wins),"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"required"}),", where all properties are accumulated, and"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"type"}),", where the first one is being used."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Below is an example of these implications:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:'{\n  "type": "object",\n  "properties": {\n    // This will render `NumField` WITHOUT `min` nor `max` properties.\n    // It will be properly validated, but without any UI guidelines.\n    "foo": {\n      "type": "number",\n      "allOf": [{ "minimum": 0 }, { "maximum": 10 }]\n    },\n    // This will render as `TextField`.\n    "bar": {\n      "oneOf": [{ "type": "string" }, { "type": "number" }]\n    }\n  }\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"note-on-bluebird",children:"Note on Bluebird"}),"\n",(0,i.jsxs)(n.p,{children:["If you're using the ",(0,i.jsx)(n.a,{href:"https://www.npmjs.com/package/bluebird",children:(0,i.jsx)(n.code,{children:"bluebird"})})," package, you may have seen the following warning (",(0,i.jsx)(n.a,{href:"http://bluebirdjs.com/docs/warning-explanations.html#warning-a-promise-was-rejected-with-a-non-error",children:"docs"}),"):"]}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsx)(n.p,{children:"Warning: a promise was rejected with a non-error [object Object]"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"There could be multiple causes of this error. One of it is not returning a proper error object."}),"\n",(0,i.jsxs)(n.p,{children:["In order to fix it, your ",(0,i.jsx)(n.code,{children:"validator"})," function should return a ",(0,i.jsx)(n.code,{children:"Error"}),"-like object instead of an object with a single ",(0,i.jsx)(n.code,{children:"details"})," property. The cleanest would be to create a custom ",(0,i.jsx)(n.code,{children:"ValidationError"})," class:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"import { ErrorObject } from 'ajv';\n\nclass ValidationError extends Error {\n  name = 'ValidationError';\n\n  constructor(public details: ErrorObject[]) {\n    super('ValidationError');\n  }\n}\n\n// Usage.\nreturn validator.errors?.length ? new ValidationError(validator.errors) : null;\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Another cause of this error may be two different implementations of the ",(0,i.jsx)(n.code,{children:"Promise"})," object when using an asynchronous validate function.\nEnsure that you are returning the same ",(0,i.jsx)(n.code,{children:"Promise"})," object implementation that Bluebird is expecting.\nThe simplest way to do that should be to avoid using the ",(0,i.jsx)(n.code,{children:"async"})," keyword and instead make the function return a ",(0,i.jsx)(n.code,{children:"Promise"})," instead."]}),"\n",(0,i.jsxs)(n.p,{children:["See ",(0,i.jsx)(n.a,{href:"https://github.com/vazco/uniforms/discussions/1047",children:"#1047"})," for more details."]}),"\n",(0,i.jsx)(n.h2,{id:"simpleschema2bridge",children:(0,i.jsx)(n.code,{children:"SimpleSchema2Bridge"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",children:"import SimpleSchema from 'simpl-schema';\nimport SimpleSchema2Bridge from 'uniforms-bridge-simple-schema-2';\n\nconst schema = new SimpleSchema({\n  // ...\n\n  aboutMe: {\n    type: String,\n    uniforms: MyText, // Component...\n    uniforms: {\n      // ...or object...\n      component: MyText, // ...with component...\n      propA: 1, // ...and/or extra props.\n    },\n  },\n});\n\nconst bridge = new SimpleSchema2Bridge({ schema });\n"})}),"\n",(0,i.jsx)(n.h2,{id:"zodbridge",children:(0,i.jsx)(n.code,{children:"ZodBridge"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",children:"import ZodBridge from 'uniforms-bridge-zod';\nimport z from 'zod';\n\nconst schema = z.object({ aboutMe: z.string() });\n\nconst bridge = new ZodBridge({ schema });\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"\n## `ZodBridge`\n\n```tsx\nimport ZodBridge from 'uniforms-bridge-zod';\nimport z from 'zod';\n\nconst schema = z.object({ aboutMe: z.string() });\n\nconst bridge = new ZodBridge({ schema });\n"})})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},82036:(e,n,r)=>{r.d(n,{R:()=>t,x:()=>d});var i=r(7378);const o={},s=i.createContext(o);function t(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:t(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);